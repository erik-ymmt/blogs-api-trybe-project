{
  "openapi": "3.0.0",
  "info": {
    "title": "Blogs API",
    "description": "This project is a RESTful API for a blog. It was implemented with Models, Services, and Controller(MSC) architecture, using MySQL for database. Its concept was made by [Trybe](https://www.betrybe.com/). Here you can try all CRUD operations! Check the [Blog API's Github repository](https://github.com/erik-ymmt/blogs-api-trybe-project) for more details! -- How to test protected endpoints: 1. Login with a valid user (such as the example one) trying out the /login route and executing it; 2. Copy the token on the response body, 3. Paste it on authorize and press authorize. Done!",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Local server"
    }
  ],
  "paths": {
    "/login": {
      "post": {
        "summary": "User login",
        "description": "User login and authentication (JWT)",
        "tags": ["Login"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/login"
              },
              "example": {
                "email": "lewishamilton@gmail.com",
                "password": "123456"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/token"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/user": {
      "post": {
        "summary": "Add new user",
        "description": "Create a new user with the input data",
        "tags": ["Users"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/newUser"
              },
              "example": {
                "displayName": "maria silva",
                "email": "maria@exemplo.com",
                "password": "123456",
                "image": "https://cdn-icons-png.flaticon.com/512/7506/7506581.png"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/token"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Conflict"
          }
        }
      },
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Find all users",
        "tags": ["Users"],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/users"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Find user by ID",
        "description": "Returns user based on ID",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "user ID",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/user/me": {
      "delete": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Delete user",
        "description": "Delete logged user",
        "tags": ["Users"],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/categories": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Add new category",
        "description": "Create a new category with the input data",
        "tags": ["Categories"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/newCategory"
              },
              "example": {
                "name": "Cars"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/category"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Find all categories",
        "description": "Returns all categories",
        "tags": ["Categories"],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/categories"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/post": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Add new post",
        "description": "Create a new post with the input data",
        "tags": ["Posts"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/newPost"
              },
              "example": {
                "title": "Blog Title!",
                "content": "The whole text for the blog post goes here in this key",
                "categoryIds": [1, 2]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/createdPost"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Find all posts",
        "description": "Returns all posts",
        "tags": ["Posts"],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/posts"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/post/{id}": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Find post by ID",
        "description": "Returns post based on ID",
        "tags": ["Posts"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "post ID",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/post"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update post",
        "description": "Update post with the selected ID",
        "tags": ["Posts"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "post ID",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updatePost"
              },
              "example": {
                "title": "Blog Title Edited!",
                "content": "The edited text goes right here too!"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/post"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Delete post",
        "description": "Delete post with the selected ID",
        "tags": ["Posts"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "post ID",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/post/search": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Find posts by search term",
        "description": "Returns posts whose title or content contains the search term",
        "tags": ["Posts"],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "search term for post"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/posts"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Login",
      "description": "Login endpoints, start here to generate a token."
    },
    {
      "name": "Users",
      "description": "Users endpoints"
    },
    {
      "name": "Categories",
      "description": "Categories endpoints"
    },
    {
      "name": "Posts",
      "description": "Posts endpoints"
    }
  ],
  "components": {
    "schemas": {
      "login": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "token": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          }
        }
      },
      "email": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          }
        }
      },
      "newUser": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "image": {
            "type": "string"
          }
        }
      },
      "newCategory": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "newPost": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "categoryIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "updatePost": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          }
        }
      },
      "users": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "number"
            },
            "displayName": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "image": {
              "type": "string"
            }
          }
        }
      },
      "user": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "displayName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "image": {
            "type": "string"
          }
        }
      },
      "categories": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "number"
            },
            "name": {
              "type": "string"
            }
          }
        }
      },
      "category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "posts": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "number"
            },
            "title": {
              "type": "string"
            },
            "content": {
              "type": "string"
            },
            "userId": {
              "type": "number"
            },
            "published": {
              "type": "string"
            },
            "updated": {
              "type": "string"
            },
            "user": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number"
                },
                "displayName": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "image": {
                  "type": "string"
                }
              }
            },
            "categories": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "userId": {
            "type": "number"
          },
          "published": {
            "type": "string"
          },
          "updated": {
            "type": "string"
          },
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number"
              },
              "displayName": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "image": {
                "type": "string"
              }
            }
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number"
                },
                "name": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "createdPost": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "userId": {
            "type": "number"
          },
          "published": {
            "type": "string"
          },
          "updated": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
